
//------------------------------------------------------------------
//                              Story
//------------------------------------------------------------------

Story:
    steps *= Step
;

//............................ Steps .........................

Step:
      TextStep
    | IncludeStep // ### ORDER IS IMPORTANT. Before VerbStep ####
    | OperationStep
    | VerbStep

;

//............. Annotated text block steps ...................


TextStep:
    textBlock = TextBlock
    (o_
        steps *= Step
    _o) ?
    // FIXME: ? not working => impossible to have empty block
    X
;


//...................... Verb steps ...........................

VerbStep:
    subjectName = VerbID
    ('va'|'do') ?
    verbName = ID
    (o_
        steps *= Step
    _o) ?
    X
;

VerbID:
    !NoVerbKeyword ID
;

NoVerbKeyword:
      'include'  | 'inclu'
    | 'read'     | 'lit'
    | 'create'   | 'cree'
    | 'delete'   | 'detruit'
    | 'update'   | 'modifie'
    | 'set'      | 'init'
    | 'check'    | 'verifie'
;


//...................... Include steps .............................

IncludeStep:
    IncludeVerb
    storyId = StoryID              // This must be defined
    X
;

IncludeVerb:
      'include'
    | 'inclu'
;

StoryID:
    kind=ID name=ID
;

//...................... Operation steps ...........................

OperationStep:
      UpdateStep
    | ConsultStep
;

UpdateStep:
    // ############# ORDER IS IMPORTANT ######################
      LinkObjectCreationStep    // create
    | LinkOperationStep         // create | delete
    | SlotStep                  // set | update
    | ObjectCreationStep        // create
    | ObjectDeletionStep        // delete

;

ConsultStep:
      CheckStep
    | ReadStep
;

//...................... Consult steps ...........................

CheckStep:
    action = CheckVerb
    parameters ?= 'something'      // TODO: define Check syntax
    X
;

ReadStep:
    action = ReadVerb
    parameters ?= 'something'       // TODO: define READ syntax
    X
;

//...................... Update steps ............................

ObjectCreationStep:
    (action = CreateVerb)?
    objectDeclaration = ObjectDeclaration
;

ObjectDeletionStep:
    action = DeleteVerb
    name = ID
    X
;

SlotStep:
    (action = SetOrUpdateVerb)?
    slotDeclaration = SlotDeclaration
;

LinkOperationStep:
    (action = CreateOrDeleteVerb)?
    linkDeclaration = LinkDeclaration
;

LinkObjectCreationStep:
    (action = CreateVerb)?
    linkObjectDeclaration = LinkObjectDeclaration
;

CheckVerb:
      'check'
    | 'verifie'
;

ReadVerb:
      'read'
    | 'lit'
;

CreateVerb:
      'create'
    | 'cree'
;

DeleteVerb:
      'delete'
    | 'detruit'
;

CreateOrDeleteVerb:
      CreateVerb
    | DeleteVerb
;

SetOrUpdateVerb:
      SetVerb
    | UpdateVerb
;

SetVerb:
      'init'
    | 'set'
;

UpdateVerb:
      'update'
    | 'modifie'
;


//...................... Object declaration ........................

ObjectDeclaration:
      SpeechObjectDeclaration
    | SymbolicObjectDeclaration
;


SpeechObjectDeclaration:
    name = ID
    ('est'|'is')
    ('une'|'un'|'an'|'a')  // ##### order is important #####
    type = ID
    '.'
    (o_
        (textBlock = TextBlock)
    _o) ?
    X
;

SymbolicObjectDeclaration:
    name = ID
    ':'
    type = ID
    (o_
        (textBlock = TextBlock)
    _o) ?
    X
;


//....................... Slot declaration ........................


SlotDeclaration:
      SpeechSlotDeclaration
    | SymbolicSlotDeclaration
;

SpeechSlotDeclaration:
    DefiniteArticle ?
    attribute = ID
    ('of'|'de')
    object = ID
    ('is'|'est')
    simpleValue = SimpleValue
    (o_
        (textBlock = TextBlock)
    _o) ?
    '.'
    X
;


SymbolicSlotDeclaration:
    object = ID
    '.'
    attribute = ID
    '='
    simpleValue = SimpleValue
    (o_
        (textBlock = TextBlock)
    _o) ?
    X
;

SimpleValue:
      EnumerationValue
    | DataValue
;

EnumerationValue:
      enumerationName=ID '.' literalName=ID
;

DataValue:
      CoreDataValue
    | UserDefinedDataValue  // Not used yet
;

UserDefinedDataValue:
    dataTypeName=ID '(' dataValue=CoreDataValue ')'
;

CoreDataValue:
      StringValue
    | BooleanValue
    | DateTimeValue
    | DateValue
    | TimeValue
    | RealValue
    | IntegerValue
    | NullTypeValue
;

StringValue:
      repr=/"[^\n"]*"/
    | repr=/'[^\n']*'/
;

BooleanValue:
      repr="true"
    | repr="false"
    | repr="vrai"
    | repr="faux"
;

RealValue:
    repr=/-?[0-9]+\.[0-9]+/
;

IntegerValue:
    repr=/-?[0-9]+/
;

DateValue:
    repr=/[0-9]{2}\/[0-9]{2}\/[0-9]{4}/
;

DateTimeValue:
    repr=/[0-9]{2}\/[0-9]{2}\/[0-9]{4}-[0-9]{2}:[0-9]{2}:[0-9]{2}/
;

TimeValue:
    repr=/[0-9]{2}:[0-9]{2}:[0-9]{2}/
;

NullTypeValue:
    repr='null'
;

//....................... Link declaration ........................


LinkDeclaration:
      SpeechLinkDeclaration
    | SymbolicLinkDeclaration
;

SpeechLinkDeclaration:
    source = ID
    association = ID
    target = ID
    '.'
    (o_
        (textBlock = TextBlock)
    _o) ?
    X
;

SymbolicLinkDeclaration:
    '('
    source = ID
    ','
    association = ID
    ','
    target = ID
    ')'
    (o_
        (textBlock = TextBlock)
    _o) ?
    X
;


//................... Link object declaration .....................


LinkObjectDeclaration:
      SpeechLinkObjectDeclaration
    | SymbolicLinkObjectDeclaration
;

SpeechLinkObjectDeclaration:
    name = ID
    ('est'|'is')
    ('le'|'la'|'l\''|'the')  // ##### order is important #####
    associationClass = ID
    ('entre'|'between')
    source = ID
    ('et'|'and')
    target = ID
    '.'
    (o_
        (textBlock = TextBlock)
    _o) ?
    X
;

SymbolicLinkObjectDeclaration:
    name = ID
    ':'
    associationClass = ID
    '('
    source = ID
    ','
    target = ID
    ')'
    (o_
        (textBlock = TextBlock)
    _o) ?
    X
;





