.. .. coding=utf-8ModelScripts Documentation========================**ModelScripts** is a python wrapper around the excellent `USE OCL`_ tool(see also `ScribesTools/UseOCL`_).Overview--------+------+----------------+---------------------------------------------+| code | language       | main concepts                               |+------+----------------+---------------------------------------------+| gl   | Glossaries     | entries, synonyms, translations             |+------+----------------+---------------------------------------------+| cl   | Classes        | classes, attributes, operations,            ||      |                | inheritance,                                ||      |                | associations, roles, association classes,   ||      |                | invariants, packages                        |+------+----------------+---------------------------------------------+| ob   | Objects        | objects, slots, links, link objects         |+------+----------------+---------------------------------------------+| re   | Relations      | relations, columns, keys, constraints       |+------+----------------+---------------------------------------------+| pa   | Participants   | actors, personas, persons, roles,           ||      |                | stakeholder                                 |+------+----------------+---------------------------------------------+| us   | Usecases       | actors, usecases, interactions              |+------+----------------+---------------------------------------------+| ta   | Tasks          | tasks, task decomposition,                  ||      |                | task decorations, concept references        |+------+----------------+---------------------------------------------+| au   | AUIs           | spaces, links, concept references           |+------+----------------+---------------------------------------------+| pe   | Permissions    | subjects, resources, permissions, actions   |+------+----------------+---------------------------------------------+| sc   | Scenarios      | personaes, scenarios,                       ||      |                | stories, contexts, steps,                   ||      |                | step decomposition,                         ||      |                | usecase instances, step instances,          ||      |                | actions, accesses, checks                   |+------+----------------+---------------------------------------------+| qu   | Qualities      | rules, checks, packages, enforcements       |+------+----------------+---------------------------------------------+| pr   | Projects       | processes, stakeholders, tasks,             ||      |                | tasks dependency, task planification,       ||      |                | time tracking                               |+------+----------------+---------------------------------------------+Language graph--------------::    digraph G {      graph [        rankdir = BT,        compound = true ]      node [fillcolor=wheat, style="filled" , shape=box] ;      subgraph clusterModels {      gl [fillcolor=lightgreen, label="gl\nGlossaries", penwidth=2] ;      cl [fillcolor=green1, label="cl\nClasses", penwidth=5] ;      ob [fillcolor=green1, label="ob\nObjects",  penwidth=2] ;      sc [fillcolor=lightgreen, label="sc\nScenarios",  penwidth=4] ;      us [fillcolor=green1, label="us\nUsecases", penwidth=2] ;      pe [fillcolor=darkseagreen1, label="pe\nPermissions", penwidth=2] ;      re [fillcolor=gold1, label="re\nRelations", penwidth=2] ;      ta [fillcolor=darkseagreen1, label="ta\nTasks", penwidth=2] ;      pr [fillcolor=indianred1, label="pr\nProjects", penwidth=2] ;      qu [fillcolor=lightsalmon, label="qu\nQualities", penwidth=2] ;      pa [fillcolor=gold1, label="pa\nParticipants", penwidth=1] ;      au [fillcolor=gold1, label="au\nAUIs", penwidth=2] ;      cl -> gl ;      ob -> gl ;      ob -> cl [penwidth=4];      re -> ob ;      re -> cl ;      pa -> gl ;      us -> gl ;      us -> pa ;      ta -> pa ;      ta -> gl ;      ta -> us ;      au -> ta ;      au -> gl ;      au -> cl ;      pe -> gl ;      pe -> re ;      pe -> cl ;      pe -> ta ;      pe -> us ;      pe -> pa ;      pe -> au ;      sc -> cl [penwidth=4] ;      sc -> re ;      sc -> ob [penwidth=2] ;      sc -> pa ;      sc -> us [penwidth=2] ;      sc -> ta [penwidth=3] ;      sc -> pe [penwidth=3] ;      qu -> gl ;      pr -> gl ;      pr -> pa ;      pr -> qu ;      /*      sql -> re ;      java -> cl ;      java -> sql ;      html -> au ;    */     }      requirements [width=2, color=white, fontcolor=grey28, fillcolor=grey90] ;      implementation [width=2, color=white, fontcolor=grey28, fillcolor=grey90] ;      gl -> requirements [ltail=clusterModels];      implementation -> sc [lhead=clusterModels];    }**TODO**..  toctree::    :maxdepth: 8    gl    cl    ob    re    pa    us    ta    au    pe    sc    qu    pr    apiReferences==========*   :ref:`genindex`*   :ref:`modindex`..  _`USE OCL`: http://sourceforge.net/projects/useocl/..  _OCL: http://en.wikipedia.org/wiki/Object_Constraint_Language..  _UML: http://en.wikipedia.org/wiki/Unified_Modeling_Language..  _OCL specification: http://www.omg.org/spec/OCL/..  _`ScribesTools/UseOCL`:    http://scribestools.readthedocs.org/en/latest/useocl/index.html