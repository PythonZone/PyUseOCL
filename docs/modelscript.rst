.. .. coding=utf-8ModelScript===========ModelScript is a lightweight modeling environment based on:*   a dozen of small textual languages called model scripts*   an underlying (yet truely optional) modeling methodology.Objectives----------ModelScript is intented to be used in classrooms.ModelScript is currently developed to support coursesat the `University of Grenoble Alpes`_. Course topic includes:* software engineering,* database design,* user interface design,* model driven engineering,* information systems.ModelScript1, first prototype-----------------------------The current version of ModelScript, referred as ModelScript1, isa very first prototype. **ModelScript1 is limited to syntaX checking*****apart for three languages** based on the  `USE OCL`_ tool.The next version, under development, will:* implement the full language semantics of all languages,* replace `USE OCL`_ languages the by custom ones,* add additional features such as automated document generation.In current version *ClassScript*, *ObjectScript* and *ScenarioScript*is the `USE OCL`_ language with a few annotations. This allows consistencyto be checked against the ModelScript environment.Note also that TaskScript is just a convenient alias here for thelanguage underlying the Kmade_ environment from university of Nancy.TaskScript is the only language with no textual syntax.ModelScript ecosystem---------------------ModelScript languages are listed below. All languages exist in the formof a textual syntax (some of them having a graphical syntax as well), apartfor tasks diagrams that have only a graphical syntax.+--------------------------------+--------------------------------------------------------------------+| **language**                   | **main concepts**                                                  |+--------------------------------+--------------------------------------------------------------------+| :ref:`GlossaryScript`          | *entries, packages, synonyms, translations...*                     |+--------------------------------+--------------------------------------------------------------------+| :ref:`ClassScript1` [#u]_      | *classes, attributes, inheritance, associations, invariants...*    |+--------------------------------+--------------------------------------------------------------------+| :ref:`ObjectScript1` [#u]_     | *objects, slots, links, link objects*                              |+--------------------------------+--------------------------------------------------------------------+| :ref:`RelationScript`          | *relations, columns, keys, constraints, dependencies...*           |+--------------------------------+--------------------------------------------------------------------+| :ref:`ParticipantScript`       | *actors, personas, persons, roles, stakeholder*                    |+--------------------------------+--------------------------------------------------------------------+| :ref:`UsecaseScript`           | *actors, usecases, interactions*                                   |+--------------------------------+--------------------------------------------------------------------+| :ref:`TaskScript` [#k]_        | *tasks, task decomposition, task decorations...*                   |+--------------------------------+--------------------------------------------------------------------+| :ref:`AUIScript`               | *spaces, links, concept references*                                |+--------------------------------+--------------------------------------------------------------------+| :ref:`PermissionScript`        | *subjects, resources, permissions, actions*                        |+--------------------------------+--------------------------------------------------------------------+| :ref:`ScenarioScript1`         | *scenarios, contexts, usecase instances, persona, step...*         |+--------------------------------+--------------------------------------------------------------------+.. ..    | :ref:`QAScript`                | QA=Quality Assurance ; *rules, enforcements, packages*             |    +--------------------------------+--------------------------------------------------------------------+    | :ref:`QCScript`                | QC=Qualirt Control ; checks, audits                                |    +--------------------------------+--------------------------------------------------------------------+    | :ref:`ProjectScript`           | *processes, stakeholders, tasks, tasks dependency...*              |    +--------------------------------+--------------------------------------------------------------------+..  [#u] :ref:`ClassScript1`, :ref:`ObjectScript1` and    :ref:`ScenarioScript1` are currently annotated versions of the    `USE OCL`_ language...  [#k]  The Kmade_ modeling environment is used for task models.    There is no textual syntax. "TaskScript" is just used here for the    sake of consistency.Language graph--------------**TODO**..  _`USE OCL`: http://sourceforge.net/projects/useocl/..  _Kmade: https://forge.lias-lab.fr/projects/kmade..  _`University of Grenoble Alpes`: https://www.univ-grenoble-alpes.fr/..  _`ScribesTools/UseOCL`:    http://scribestools.readthedocs.org/en/latest/useocl/index.html